plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://maven.terraformersmc.com/releases/" } // Modmenu
	maven { url = "https://pluto-mod-maven.web.app/maven" } // PDAPI
	maven { url = "https://maven.parchmentmc.org" } // Parchment
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings

	// Optional mod addons
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" } // Create & Dep
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // FCAPI ( Create )
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // MixinExtras, ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel
}

loom {

	accessWidenerPath = file("src/main/resources/bartending.accesswidener")

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		it.mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:intermediary-v2"
		it.parchment "org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip"
		it.officialMojangMappings { nameSyntheticMembers = false }
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "ml.pluto7073:pdapi:${project.minecraft_version}+${project.pdapi_version}"

	modCompileOnly "com.simibubi.create:create-fabric-${minecraft_version}:${create_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}